// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ValueSource - Source of the value, "app" for app level, "env" for app env level.
type ValueSource string

const (
	ValueSourceApp ValueSource = "app"
	ValueSourceEnv ValueSource = "env"
)

func (e ValueSource) ToPointer() *ValueSource {
	return &e
}

func (e *ValueSource) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "app":
		fallthrough
	case "env":
		*e = ValueSource(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ValueSource: %v", v)
	}
}
