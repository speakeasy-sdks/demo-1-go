// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// ValueResponse - Shared Values can be used to manage variables and configuration that might vary between environments. They are also the way that secrets can be stored securely.
//
// Shared Values are by default shared across all environments in an application. However, they can be overridden on an Environment by Environment basis.
//
// For example: There might be 2 API keys that are used in an application. One development key used in the development and staging environments and another used for production. The development API key would be set at the Application level. The value would then be overridden at the Environment level for the production Environment.
type ValueResponse struct {
	CreatedAt time.Time `json:"created_at"`
	// A Human friendly description of what the Shared Value is.
	Description string `json:"description"`
	// Specified that the Shared Value contains a secret.
	IsSecret bool `json:"is_secret"`
	// The unique key by which the Shared Value can be referenced. pattern: ^[a-zA-Z0-9._-]+$.
	Key string `json:"key"`
	// Location of the secret value in the secret store.
	SecretKey string `json:"secret_key"`
	// Version of the current secret value as returned by the secret store.
	SecretVersion string `json:"secret_version"`
	// Source of the value, "app" for app level, "env" for app env level.
	Source    ValueSource `json:"source"`
	UpdatedAt time.Time   `json:"updated_at"`
	// The value that will be stored. (Will be always empty for secrets.)
	Value string `json:"value"`
}
