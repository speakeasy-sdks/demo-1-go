// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ValueSourceEnum - Source of the value, "app" for app level, "env" for app env level.
type ValueSourceEnum string

const (
	ValueSourceEnumApp ValueSourceEnum = "app"
	ValueSourceEnumEnv ValueSourceEnum = "env"
)

func (e ValueSourceEnum) ToPointer() *ValueSourceEnum {
	return &e
}

func (e *ValueSourceEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "app":
		fallthrough
	case "env":
		*e = ValueSourceEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ValueSourceEnum: %v", v)
	}
}
