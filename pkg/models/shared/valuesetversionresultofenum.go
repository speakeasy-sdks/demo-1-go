// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ValueSetVersionResultOfEnum string

const (
	ValueSetVersionResultOfEnumAppValueCreate            ValueSetVersionResultOfEnum = "app_value_create"
	ValueSetVersionResultOfEnumAppValueUpdate            ValueSetVersionResultOfEnum = "app_value_update"
	ValueSetVersionResultOfEnumAppValueDelete            ValueSetVersionResultOfEnum = "app_value_delete"
	ValueSetVersionResultOfEnumAppValuesDelete           ValueSetVersionResultOfEnum = "app_values_delete"
	ValueSetVersionResultOfEnumAppValueSetVersionRestore ValueSetVersionResultOfEnum = "app_value_set_version_restore"
	ValueSetVersionResultOfEnumAppValueSetVersionPurge   ValueSetVersionResultOfEnum = "app_value_set_version_purge"
	ValueSetVersionResultOfEnumEnvValueCreate            ValueSetVersionResultOfEnum = "env_value_create"
	ValueSetVersionResultOfEnumEnvValueUpdate            ValueSetVersionResultOfEnum = "env_value_update"
	ValueSetVersionResultOfEnumEnvValueDelete            ValueSetVersionResultOfEnum = "env_value_delete"
	ValueSetVersionResultOfEnumEnvValuesDelete           ValueSetVersionResultOfEnum = "env_values_delete"
	ValueSetVersionResultOfEnumEnvValueSetVersionRestore ValueSetVersionResultOfEnum = "env_value_set_version_restore"
	ValueSetVersionResultOfEnumEnvValueSetVersionPurge   ValueSetVersionResultOfEnum = "env_value_set_version_purge"
)

func (e ValueSetVersionResultOfEnum) ToPointer() *ValueSetVersionResultOfEnum {
	return &e
}

func (e *ValueSetVersionResultOfEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "app_value_create":
		fallthrough
	case "app_value_update":
		fallthrough
	case "app_value_delete":
		fallthrough
	case "app_values_delete":
		fallthrough
	case "app_value_set_version_restore":
		fallthrough
	case "app_value_set_version_purge":
		fallthrough
	case "env_value_create":
		fallthrough
	case "env_value_update":
		fallthrough
	case "env_value_delete":
		fallthrough
	case "env_values_delete":
		fallthrough
	case "env_value_set_version_restore":
		fallthrough
	case "env_value_set_version_purge":
		*e = ValueSetVersionResultOfEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ValueSetVersionResultOfEnum: %v", v)
	}
}
