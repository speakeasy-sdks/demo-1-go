// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"bytes"
	"encoding/json"
	"errors"
	"net/http"
	"test-1/pkg/models/shared"
)

type GetOrgsOrgIDAppsAppIDSetsSetIDRequest struct {
	// The Application ID.
	//
	//
	AppID string `pathParam:"style=simple,explode=false,name=appId"`
	// ID of the Deployment Set to compared against.
	Diff *string `queryParam:"style=form,explode=true,name=diff"`
	// The Organization ID.
	//
	//
	OrgID string `pathParam:"style=simple,explode=false,name=orgId"`
	// ID of the Deployment Set.
	//
	//
	SetID string `pathParam:"style=simple,explode=false,name=setId"`
}

type GetOrgsOrgIDAppsAppIDSetsSetID200ApplicationJSONType string

const (
	GetOrgsOrgIDAppsAppIDSetsSetID200ApplicationJSONTypeSetResponse        GetOrgsOrgIDAppsAppIDSetsSetID200ApplicationJSONType = "SetResponse"
	GetOrgsOrgIDAppsAppIDSetsSetID200ApplicationJSONTypePlainDeltaResponse GetOrgsOrgIDAppsAppIDSetsSetID200ApplicationJSONType = "PlainDeltaResponse"
)

type GetOrgsOrgIDAppsAppIDSetsSetID200ApplicationJSON struct {
	SetResponse        *shared.SetResponse
	PlainDeltaResponse *shared.PlainDeltaResponse

	Type GetOrgsOrgIDAppsAppIDSetsSetID200ApplicationJSONType
}

func CreateGetOrgsOrgIDAppsAppIDSetsSetID200ApplicationJSONSetResponse(setResponse shared.SetResponse) GetOrgsOrgIDAppsAppIDSetsSetID200ApplicationJSON {
	typ := GetOrgsOrgIDAppsAppIDSetsSetID200ApplicationJSONTypeSetResponse

	return GetOrgsOrgIDAppsAppIDSetsSetID200ApplicationJSON{
		SetResponse: &setResponse,
		Type:        typ,
	}
}

func CreateGetOrgsOrgIDAppsAppIDSetsSetID200ApplicationJSONPlainDeltaResponse(plainDeltaResponse shared.PlainDeltaResponse) GetOrgsOrgIDAppsAppIDSetsSetID200ApplicationJSON {
	typ := GetOrgsOrgIDAppsAppIDSetsSetID200ApplicationJSONTypePlainDeltaResponse

	return GetOrgsOrgIDAppsAppIDSetsSetID200ApplicationJSON{
		PlainDeltaResponse: &plainDeltaResponse,
		Type:               typ,
	}
}

func (u *GetOrgsOrgIDAppsAppIDSetsSetID200ApplicationJSON) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	setResponse := new(shared.SetResponse)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&setResponse); err == nil {
		u.SetResponse = setResponse
		u.Type = GetOrgsOrgIDAppsAppIDSetsSetID200ApplicationJSONTypeSetResponse
		return nil
	}

	plainDeltaResponse := new(shared.PlainDeltaResponse)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&plainDeltaResponse); err == nil {
		u.PlainDeltaResponse = plainDeltaResponse
		u.Type = GetOrgsOrgIDAppsAppIDSetsSetID200ApplicationJSONTypePlainDeltaResponse
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u GetOrgsOrgIDAppsAppIDSetsSetID200ApplicationJSON) MarshalJSON() ([]byte, error) {
	if u.SetResponse != nil {
		return json.Marshal(u.SetResponse)
	}

	if u.PlainDeltaResponse != nil {
		return json.Marshal(u.PlainDeltaResponse)
	}

	return nil, nil
}

type GetOrgsOrgIDAppsAppIDSetsSetIDResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The Requested Deployment Set.
	//
	//
	GetOrgsOrgIDAppsAppIDSetsSetID200ApplicationJSONOneOf *GetOrgsOrgIDAppsAppIDSetsSetID200ApplicationJSON
	// No Deployment Set with ID `setId` found in Application.
	//
	//
	GetOrgsOrgIDAppsAppIDSetsSetID404ApplicationJSONString *string
}
